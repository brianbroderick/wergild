<age>:int @index(int) . 
<exp>:int @index(int) . 
<dest>:[uid] . 
<race>:string @index(exact) @count . 
<coins>:int @index(int) . 
<coorX>:int @index(int) . 
<coorY>:int @index(int) . 
<coorZ>:int @index(int) . 
<exits>:[uid] . 
<items>:[uid] . 
<level>:int @index(int) . 
<portal>:string . 
<region>:uid @reverse . 
<poiDesc>:string . 
<poiName>:string @index(fulltext) . 
<roomEnv>:[string] . 
<terrain>:uid . 
<itemHash>:string @index(exact) @upsert . 
<itemName>:string @index(fulltext) . 
<poiSmell>:string . 
<poiTouch>:string . 
<roomDesc>:string . 
<roomName>:string . 
<roomSlug>:string @index(exact) @upsert . 
<bankCoins>:int @index(int) . 
<className>:string @index(exact) @count . 
<direction>:string @index(exact) . 
<guildName>:string @index(exact) @count . 
<poiListen>:string . 
<roomSmell>:string . 
<regionName>:string @index(exact) . 
<roomListen>:string . 
<dgraph.type>:[string] @index(exact) . 
<creatureSlug>:string @index(exact) @upsert . 
<locationHash>:string @index(exact) @upsert . 
<pointsOfInterest>:[uid] @reverse . 
<insertedCreatureAt>:datetime @index(hour) . 
type Exit {
	dest: Room
	direction: string
	portal: string
}
type Item {
	itemHash: string
	itemName: string
	itemDesc: string
	itemListen: string
	itemSmell: string
	itemTouch: string
	coinValue: int
	weight: int
	items: [Item]
}
type Room {
	region: Region
	coorX: int
	coorY: int
	coorZ: int
	locationHash: string
	roomName: string
	roomSlug: string
	roomDesc: string
	roomEnv: string
	roomListen: string
	roomSmell: string
	lightLevel: int
	pointsOfInterest: [PointOfInterest]
	exits: [Exit]
	terrain: Terrain
	items: [Item]
}
type Guild {
	guildName: string
}
type Region {
	regionName: string
}
type Terrain {
	terrainType: string
}
type Creature {
	creatureName: string
	creatureDesc: string
	creatureSlug: string
	age: int
	lang: string
	level: int
	exp: int
	coins: int
	bankCoins: int
	hp: int
	hpMax: int
	ap: int
	apMax: int
	wimpy: int
	wimpyDir: string
	encumb: int
	sober: int
	thirst: int
	hunger: int
	poison: int
	defend: string
	aim: string
	attack: string
	str: int
	agl: int
	intl: int
	tgh: int
	per: int
	strMod: int
	aglMod: int
	intlMod: int
	tghMod: int
	perMod: int
	insertedCreatureAt: datetime
	items: [Item]
}
type CreatureRace {
	race: string
}
type CreatureClass {
	className: string
}
type PointOfInterest {
	poiName: string
	poiDesc: string
	poiListen: string
	poiSmell: string
	poiTouch: string
	search: [Item]
}
